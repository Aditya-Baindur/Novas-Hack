{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaanu\\\\Cursor Projects\\\\Hackathons\\\\Novas-Hack\\\\sim\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useSpring, to, animated, config } from '@react-spring/web';\nimport { scale, dist } from 'vec-la';\nimport { useDrag } from 'react-use-gesture';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [{\n    pos\n  }, api] = useSpring(() => ({\n    pos: [0, 0]\n  }));\n  const [{\n    angle\n  }, angleApi] = useSpring(() => ({\n    angle: 0,\n    config: config.wobbly\n  }));\n  // direction calculates pointer direction\n  // memo is like a cache, it contains the values that you return inside \"set\"\n  // this way we can inject the springs current coordinates on the initial event and\n  // add movement to it for convenience\n\n  const bind = useDrag(({\n    xy,\n    previous,\n    down,\n    movement: pos,\n    velocity,\n    direction\n  }) => {\n    api.start({\n      pos,\n      immediate: down,\n      config: {\n        velocity: scale(direction, velocity),\n        decay: true\n      }\n    });\n    if (dist(xy, previous) > 10 || !down) angleApi.start({\n      angle: Math.atan2(direction[0], -direction[1])\n    });\n  }, {\n    initial: () => pos.get()\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    className: styles.rocket,\n    ...bind(),\n    style: {\n      transform: to([pos, angle],\n      // @ts-ignore\n      ([x, y], a) => `translate3d(${x}px,${y}px,0) rotate(${a}rad)`)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ksoo+3ONqD8GWQ9Dz8tTw9Gp+Ig=\", false, function () {\n  return [useSpring, useSpring, useDrag];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useSpring","to","animated","config","scale","dist","useDrag","styles","jsxDEV","_jsxDEV","App","_s","pos","api","angle","angleApi","wobbly","bind","xy","previous","down","movement","velocity","direction","start","immediate","decay","Math","atan2","initial","get","div","className","rocket","style","transform","x","y","a","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kaanu/Cursor Projects/Hackathons/Novas-Hack/sim/src/App.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useSpring, to, animated, config } from '@react-spring/web'\nimport { scale, dist } from 'vec-la'\nimport { useDrag } from 'react-use-gesture'\n\nimport styles from './styles.module.css'\n\nexport default function App() {\n  const [{ pos }, api] = useSpring(() => ({ pos: [0, 0] }))\n  const [{ angle }, angleApi] = useSpring(() => ({\n    angle: 0,\n    config: config.wobbly,\n  }))\n  // direction calculates pointer direction\n  // memo is like a cache, it contains the values that you return inside \"set\"\n  // this way we can inject the springs current coordinates on the initial event and\n  // add movement to it for convenience\n\n  const bind = useDrag(\n    ({ xy, previous, down, movement: pos, velocity, direction }) => {\n      api.start({\n        pos,\n        immediate: down,\n        config: { velocity: scale(direction, velocity), decay: true },\n      })\n\n      if (dist(xy, previous) > 10 || !down)\n        angleApi.start({ angle: Math.atan2(direction[0], -direction[1]) })\n    },\n    { initial: () => pos.get() }\n  )\n  return (\n    <animated.div\n      className={styles.rocket}\n      {...bind()}\n      style={{\n        transform: to(\n          [pos, angle],\n          // @ts-ignore\n          ([x, y], a) => `translate3d(${x}px,${y}px,0) rotate(${a}rad)`\n        ),\n      }}\n    />\n  )\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AACnE,SAASC,KAAK,EAAEC,IAAI,QAAQ,QAAQ;AACpC,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,OAAOC,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAAC;IAAEC;EAAI,CAAC,EAAEC,GAAG,CAAC,GAAGb,SAAS,CAAC,OAAO;IAAEY,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;EAAE,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC;IAAEE;EAAM,CAAC,EAAEC,QAAQ,CAAC,GAAGf,SAAS,CAAC,OAAO;IAC7Cc,KAAK,EAAE,CAAC;IACRX,MAAM,EAAEA,MAAM,CAACa;EACjB,CAAC,CAAC,CAAC;EACH;EACA;EACA;EACA;;EAEA,MAAMC,IAAI,GAAGX,OAAO,CAClB,CAAC;IAAEY,EAAE;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,QAAQ,EAAET,GAAG;IAAEU,QAAQ;IAAEC;EAAU,CAAC,KAAK;IAC9DV,GAAG,CAACW,KAAK,CAAC;MACRZ,GAAG;MACHa,SAAS,EAAEL,IAAI;MACfjB,MAAM,EAAE;QAAEmB,QAAQ,EAAElB,KAAK,CAACmB,SAAS,EAAED,QAAQ,CAAC;QAAEI,KAAK,EAAE;MAAK;IAC9D,CAAC,CAAC;IAEF,IAAIrB,IAAI,CAACa,EAAE,EAAEC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAACC,IAAI,EAClCL,QAAQ,CAACS,KAAK,CAAC;MAAEV,KAAK,EAAEa,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC,CAAC,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC;EACtE,CAAC,EACD;IAAEM,OAAO,EAAEA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC;EAAE,CAC7B,CAAC;EACD,oBACErB,OAAA,CAACP,QAAQ,CAAC6B,GAAG;IACXC,SAAS,EAAEzB,MAAM,CAAC0B,MAAO;IAAA,GACrBhB,IAAI,CAAC,CAAC;IACViB,KAAK,EAAE;MACLC,SAAS,EAAElC,EAAE,CACX,CAACW,GAAG,EAAEE,KAAK,CAAC;MACZ;MACA,CAAC,CAACsB,CAAC,EAAEC,CAAC,CAAC,EAAEC,CAAC,KAAK,eAAeF,CAAC,MAAMC,CAAC,gBAAgBC,CAAC,MACzD;IACF;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAAC/B,EAAA,CArCuBD,GAAG;EAAA,QACFV,SAAS,EACFA,SAAS,EAS1BM,OAAO;AAAA;AAAAqC,EAAA,GAXEjC,GAAG;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}