{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\n/**\n * Adds two vectors\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Vector}\n */\nvar vAdd = function vAdd(v, v2) {\n  return [v[0] + v2[0], v[1] + v2[1]];\n};\n\n/**\n * Subtracts one vector from another\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Vector}\n */\nvar vSub = function vSub(v, v2) {\n  return [v[0] - v2[0], v[1] - v2[1]];\n};\n\n/**\n * Gets the magnitude of a vector\n * @param {Vector} v\n * @returns {Number}\n */\nvar vMag = function vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\n/**\n * Gets the normal of a vector\n * @param {Vector} v\n * @returns {Vector}\n */\nvar vNormal = function vNormal(v) {\n  return [-v[1], v[0]];\n};\n\n/**\n * Gets a point along the direction formed from v2 - v1.\n * t represents a normalised percentage [0, 1] such that vTowards(v1, v2, 0) === v1 and vTowards(v1, v2, 1) === v2\n * @param {Vector} v1\n * @param {Vector} v2\n * @param {Number} t\n * @returns {Vector}\n */\nvar vTowards = function vTowards(v1, v2, t) {\n  var d = vSub(v2, v1);\n  var m = vMag(d);\n  return vAdd(v1, vScale(vNorm(d), t * m));\n};\n\n/**\n * Gets a normalised vector\n * @param {Vector} v\n * @returns {Vector}\n */\nvar vNorm = function vNorm(v) {\n  var mag = vMag(v);\n  return [v[0] / mag, v[1] / mag];\n};\n\n/**\n * Gets a scaled vector\n * @param {Vector} v\n * @param {Number} sc\n * @returns {Vector}\n */\nvar vScale = function vScale(v, sc) {\n  return [v[0] * sc, v[1] * sc];\n};\n\n/**\n * Creates an 2x3 Matrix\n * @param {Number} a\n * @param {Number} b\n * @param {Number} c\n * @param {Number} d\n * @param {Number} tx\n * @param {Number} ty\n * @returns {Matrix}\n */\nvar vCreateMatrix = function vCreateMatrix() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var tx = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var ty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  return [a, c, tx, b, d, ty, 0, 0, 1];\n};\n\n/**\n * Applys a matrix transformation to a vector\n * @param {Vector} v\n * @param {Matrix} m\n * @returns {Vector}\n */\nvar vTransform = function vTransform(v, m) {\n  return [v[0] * m[0] + v[1] * m[1] + m[2], v[0] * m[3] + v[1] * m[4] + m[5]];\n};\n\n/**\n * Functional: Curried vTransform\n * @param {Vector} v\n * @param {Matrix} m\n * @returns {Vector}\n */\nvar vfTransform = function vfTransform(m) {\n  return function (v) {\n    return vTransform(v, m);\n  };\n};\n\n/**\n * Compose two tranformations\n * @param {Matrix} m\n * @param {Matrix} m2\n * @returns {Matrix}\n */\nvar vComposeTransform = function vComposeTransform(m, m2) {\n  return [m[0] * m2[0] + m[1] * m2[3] + m[2] * m2[6], m[0] * m2[1] + m[1] * m2[4] + m[2] * m2[7], m[0] * m2[2] + m[1] * m2[5] + m[2] * m2[8], m[3] * m2[0] + m[4] * m2[3] + m[5] * m2[6], m[3] * m2[1] + m[4] * m2[4] + m[5] * m2[7], m[3] * m2[2] + m[4] * m2[5] + m[5] * m2[8], m[6] * m2[0] + m[7] * m2[3] + m[8] * m2[6], m[6] * m2[1] + m[7] * m2[4] + m[8] * m2[7], m[6] * m2[2] + m[7] * m2[5] + m[8] * m2[8]];\n};\n\n/**\n * Rotates a vector around the origin. Shorthand for a rotation matrix\n * @param {Vector} v\n * @param {Number} a\n * @returns {Vector}\n */\nvar vRotate = function vRotate(v, a) {\n  return [v[0] * Math.cos(a) - v[1] * Math.sin(a), v[0] * Math.sin(a) + v[1] * Math.cos(a)];\n};\n\n/**\n * Rotates a vector around a given point.\n * @param {Vector} v\n * @param {Vector} cp\n * @param {Number} a\n * @returns {Vector}\n */\nvar vRotatePointAround = function vRotatePointAround(v, cp, a) {\n  var v2 = vSub(v, cp);\n  return vAdd(cp, [v2[0] * Math.cos(a) - v2[1] * Math.sin(a), v2[0] * Math.sin(a) + v2[1] * Math.cos(a)]);\n};\n\n/**\n * Gets the equidistant point between two vectors\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Vector}\n */\nvar vMidpoint = function vMidpoint(v, v2) {\n  return vScale(vAdd(v, v2), 0.5);\n};\n\n/**\n * Gets the vector r units along the angle a from vector v\n * @param {Vector} v\n * @param {Number} a\n * @param {Number} r\n * @returns {Vector}\n */\nvar vAlongAngle = function vAlongAngle(v, a, r) {\n  return [v[0] + Math.cos(a) * r, v[1] + Math.sin(a) * r];\n};\n\n/**\n * Gets the distance between two vectors\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Number}\n */\nvar vDist = function vDist(v, v2) {\n  return Math.sqrt(Math.pow(v2[0] - v[0], 2) + Math.pow(v2[1] - v[1], 2));\n};\n\n/**\n * Dot product of two vectors\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Number}\n */\nvar vDot = function vDot(v, v2) {\n  return v[0] * v2[0] + v[1] * v2[1];\n};\n\n/**\n * Determinate of a matrix\n * @param {Matrix} m\n * @returns {Number}\n */\nvar vDet = function vDet(m) {\n  return m[0] * m[4] - m[3] * m[1];\n};\n\n/**\n * Returns a builder object for easily composing matrices. Exposes\n * useful helper functions for general matrix operations:\n * translate, scale, rotate, shear\n * as a generic add function that accepts a matrix.\n * Calling get returns the matrix.\n * @param {Matrix} m\n */\nvar vMatrixBuilder = function vMatrixBuilder() {\n  var m = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var _m = m || vCreateMatrix();\n  return {\n    add: function add(m) {\n      return vMatrixBuilder(vComposeTransform(m, _m));\n    },\n    translate: function translate(x, y) {\n      return vMatrixBuilder(vComposeTransform([1, 0, x, 0, 1, y, 0, 0, 1], _m));\n    },\n    rotate: function rotate(a) {\n      return vMatrixBuilder(vComposeTransform([Math.cos(a), -Math.sin(a), 0, Math.sin(a), Math.cos(a), 0, 0, 0, 1], _m));\n    },\n    scale: function scale(x, y) {\n      return vMatrixBuilder(vComposeTransform([x, 0, 0, 0, y, 0, 0, 0, 1], _m));\n    },\n    shear: function shear(x, y) {\n      return vMatrixBuilder(vComposeTransform([1, x, 0, y, 1, 0, 0, 0, 1], _m));\n    },\n    get: function get() {\n      return [].concat(_toConsumableArray(_m));\n    }\n  };\n};\n\n/* start exports */\nexports.add = vAdd;\nexports.alongAngle = vAlongAngle;\nexports.sub = vSub;\nexports.norm = vNorm;\nexports.mag = vMag;\nexports.scale = vScale;\nexports.normal = vNormal;\nexports.towards = vTowards;\nexports.fTransform = vfTransform;\nexports.transform = vTransform;\nexports.composeTransform = vComposeTransform;\nexports.matrixBuilder = vMatrixBuilder;\nexports.createMatrix = vCreateMatrix;\nexports.rotate = vRotate;\nexports.rotatePointAround = vRotatePointAround;\nexports.midpoint = vMidpoint;\nexports.dot = vDot;\nexports.det = vDet;\nexports.dist = vDist;\n/* end exports */","map":{"version":3,"names":["Object","defineProperty","exports","value","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","vAdd","v","v2","vSub","vMag","Math","sqrt","vNormal","vTowards","v1","t","d","m","vScale","vNorm","mag","sc","vCreateMatrix","a","arguments","undefined","b","c","tx","ty","vTransform","vfTransform","vComposeTransform","m2","vRotate","cos","sin","vRotatePointAround","cp","vMidpoint","vAlongAngle","r","vDist","pow","vDot","vDet","vMatrixBuilder","_m","add","translate","x","y","rotate","scale","shear","get","concat","alongAngle","sub","norm","normal","towards","fTransform","transform","composeTransform","matrixBuilder","createMatrix","rotatePointAround","midpoint","dot","det","dist"],"sources":["C:/Users/kaanu/Cursor Projects/Hackathons/Novas-Hack/sim/node_modules/vec-la/dist/vec.module.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Adds two vectors\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Vector}\n */\nvar vAdd = function vAdd(v, v2) {\n  return [v[0] + v2[0], v[1] + v2[1]];\n};\n\n/**\n * Subtracts one vector from another\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Vector}\n */\nvar vSub = function vSub(v, v2) {\n  return [v[0] - v2[0], v[1] - v2[1]];\n};\n\n/**\n * Gets the magnitude of a vector\n * @param {Vector} v\n * @returns {Number}\n */\nvar vMag = function vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\n/**\n * Gets the normal of a vector\n * @param {Vector} v\n * @returns {Vector}\n */\nvar vNormal = function vNormal(v) {\n  return [-v[1], v[0]];\n};\n\n/**\n * Gets a point along the direction formed from v2 - v1.\n * t represents a normalised percentage [0, 1] such that vTowards(v1, v2, 0) === v1 and vTowards(v1, v2, 1) === v2\n * @param {Vector} v1\n * @param {Vector} v2\n * @param {Number} t\n * @returns {Vector}\n */\nvar vTowards = function vTowards(v1, v2, t) {\n  var d = vSub(v2, v1);\n  var m = vMag(d);\n  return vAdd(v1, vScale(vNorm(d), t * m));\n};\n\n/**\n * Gets a normalised vector\n * @param {Vector} v\n * @returns {Vector}\n */\nvar vNorm = function vNorm(v) {\n  var mag = vMag(v);\n  return [v[0] / mag, v[1] / mag];\n};\n\n/**\n * Gets a scaled vector\n * @param {Vector} v\n * @param {Number} sc\n * @returns {Vector}\n */\nvar vScale = function vScale(v, sc) {\n  return [v[0] * sc, v[1] * sc];\n};\n\n/**\n * Creates an 2x3 Matrix\n * @param {Number} a\n * @param {Number} b\n * @param {Number} c\n * @param {Number} d\n * @param {Number} tx\n * @param {Number} ty\n * @returns {Matrix}\n */\nvar vCreateMatrix = function vCreateMatrix() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var tx = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var ty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  return [a, c, tx, b, d, ty, 0, 0, 1];\n};\n\n/**\n * Applys a matrix transformation to a vector\n * @param {Vector} v\n * @param {Matrix} m\n * @returns {Vector}\n */\nvar vTransform = function vTransform(v, m) {\n  return [v[0] * m[0] + v[1] * m[1] + m[2], v[0] * m[3] + v[1] * m[4] + m[5]];\n};\n\n/**\n * Functional: Curried vTransform\n * @param {Vector} v\n * @param {Matrix} m\n * @returns {Vector}\n */\nvar vfTransform = function vfTransform(m) {\n  return function (v) {\n    return vTransform(v, m);\n  };\n};\n\n/**\n * Compose two tranformations\n * @param {Matrix} m\n * @param {Matrix} m2\n * @returns {Matrix}\n */\nvar vComposeTransform = function vComposeTransform(m, m2) {\n  return [m[0] * m2[0] + m[1] * m2[3] + m[2] * m2[6], m[0] * m2[1] + m[1] * m2[4] + m[2] * m2[7], m[0] * m2[2] + m[1] * m2[5] + m[2] * m2[8], m[3] * m2[0] + m[4] * m2[3] + m[5] * m2[6], m[3] * m2[1] + m[4] * m2[4] + m[5] * m2[7], m[3] * m2[2] + m[4] * m2[5] + m[5] * m2[8], m[6] * m2[0] + m[7] * m2[3] + m[8] * m2[6], m[6] * m2[1] + m[7] * m2[4] + m[8] * m2[7], m[6] * m2[2] + m[7] * m2[5] + m[8] * m2[8]];\n};\n\n/**\n * Rotates a vector around the origin. Shorthand for a rotation matrix\n * @param {Vector} v\n * @param {Number} a\n * @returns {Vector}\n */\nvar vRotate = function vRotate(v, a) {\n  return [v[0] * Math.cos(a) - v[1] * Math.sin(a), v[0] * Math.sin(a) + v[1] * Math.cos(a)];\n};\n\n/**\n * Rotates a vector around a given point.\n * @param {Vector} v\n * @param {Vector} cp\n * @param {Number} a\n * @returns {Vector}\n */\nvar vRotatePointAround = function vRotatePointAround(v, cp, a) {\n  var v2 = vSub(v, cp);\n  return vAdd(cp, [v2[0] * Math.cos(a) - v2[1] * Math.sin(a), v2[0] * Math.sin(a) + v2[1] * Math.cos(a)]);\n};\n\n/**\n * Gets the equidistant point between two vectors\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Vector}\n */\nvar vMidpoint = function vMidpoint(v, v2) {\n  return vScale(vAdd(v, v2), 0.5);\n};\n\n/**\n * Gets the vector r units along the angle a from vector v\n * @param {Vector} v\n * @param {Number} a\n * @param {Number} r\n * @returns {Vector}\n */\nvar vAlongAngle = function vAlongAngle(v, a, r) {\n  return [v[0] + Math.cos(a) * r, v[1] + Math.sin(a) * r];\n};\n\n/**\n * Gets the distance between two vectors\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Number}\n */\nvar vDist = function vDist(v, v2) {\n  return Math.sqrt(Math.pow(v2[0] - v[0], 2) + Math.pow(v2[1] - v[1], 2));\n};\n\n/**\n * Dot product of two vectors\n * @param {Vector} v\n * @param {Vector} v2\n * @returns {Number}\n */\nvar vDot = function vDot(v, v2) {\n  return v[0] * v2[0] + v[1] * v2[1];\n};\n\n/**\n * Determinate of a matrix\n * @param {Matrix} m\n * @returns {Number}\n */\nvar vDet = function vDet(m) {\n  return m[0] * m[4] - m[3] * m[1];\n};\n\n/**\n * Returns a builder object for easily composing matrices. Exposes\n * useful helper functions for general matrix operations:\n * translate, scale, rotate, shear\n * as a generic add function that accepts a matrix.\n * Calling get returns the matrix.\n * @param {Matrix} m\n */\nvar vMatrixBuilder = function vMatrixBuilder() {\n  var m = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _m = m || vCreateMatrix();\n  return {\n    add: function add(m) {\n      return vMatrixBuilder(vComposeTransform(m, _m));\n    },\n    translate: function translate(x, y) {\n      return vMatrixBuilder(vComposeTransform([1, 0, x, 0, 1, y, 0, 0, 1], _m));\n    },\n    rotate: function rotate(a) {\n      return vMatrixBuilder(vComposeTransform([Math.cos(a), -Math.sin(a), 0, Math.sin(a), Math.cos(a), 0, 0, 0, 1], _m));\n    },\n    scale: function scale(x, y) {\n      return vMatrixBuilder(vComposeTransform([x, 0, 0, 0, y, 0, 0, 0, 1], _m));\n    },\n    shear: function shear(x, y) {\n      return vMatrixBuilder(vComposeTransform([1, x, 0, y, 1, 0, 0, 0, 1], _m));\n    },\n    get: function get() {\n      return [].concat(_toConsumableArray(_m));\n    }\n  };\n};\n\n/* start exports */\nexports.add = vAdd;\nexports.alongAngle = vAlongAngle;\nexports.sub = vSub;\nexports.norm = vNorm;\nexports.mag = vMag;\nexports.scale = vScale;\nexports.normal = vNormal;\nexports.towards = vTowards;\nexports.fTransform = vfTransform;\nexports.transform = vTransform;\nexports.composeTransform = vComposeTransform;\nexports.matrixBuilder = vMatrixBuilder;\nexports.createMatrix = vCreateMatrix;\nexports.rotate = vRotate;\nexports.rotatePointAround = vRotatePointAround;\nexports.midpoint = vMidpoint;\nexports.dot = vDot;\nexports.det = vDet;\nexports.dist = vDist;\n/* end exports */"],"mappings":"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C,EAAEgB,EAAE,EAAE;EACxD,OAAO,CAAChB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,EAAEhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,EAAEhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,EAAEhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,EAAEhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,EAAEhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,EAAEhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,GAAGhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EAAE,CAAC,CAAC,CAAC,EAAEhB,CAAC,CAAC,CAAC,CAAC,GAAGgB,EA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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}